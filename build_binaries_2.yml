pr: none

trigger:
  branches:
    include:
      - development


variables:
  VERSION: 99.95
  BUILD_COUNTER: $[counter(variables['VERSION'], 0)]
  APP_VERSION: '$(VERSION).$(BUILD_COUNTER)'

jobs:
- job: Build_All

  strategy:
      matrix:
        linux:
          imageName: 'ubuntu-latest'
        windows:
          imageName: 'windows-latest'

  pool:
    vmImage: $(imageName)

  steps:
    - checkout: self
      clean: 'true'
      fetchDepth: '1'
      lfs: 'true'
      persistCredentials: true

    - task: replacetokens@3
      inputs:
        targetFiles: 'pom.xml,src/main/java/uk/yermak/audiobookconverter/Version.java, version.txt'
        tokenPrefix: '#{'
        tokenSuffix: '}#'

    - bash: |
        wget -q https://download.java.net/openjdk/jdk21/ri/openjdk-21+35_linux-x64_bin.tar.gz
        tar -xzf openjdk-21+35_linux-x64_bin.tar.gz
        export JAVA_HOME=jdk-21
        export JAVAFX_JMODS=javafx/jmods/linux
        mvn clean package --no-transfer-progress

        build/linux/package.sh $JAVA_HOME $JAVAFX_JMODS $(APP_VERSION)

      condition: eq( variables['Agent.OS'], 'Linux' )
      displayName: 'Build deb package'


    - script: |
        ECHO ON
        choco install 7zip --no-progress
        choco install wget --no-progress
        wget -q https://download.java.net/openjdk/jdk21/ri/openjdk-21+35_windows-x64_bin.zip
        7z.exe x openjdk-21+35_windows-x64_bin.zip
        setx JAVA_HOME jdk-21
        call refreshenv
        SET JAVAFX_JMODS=javafx/jmods/windows

        call mvn clean package --no-transfer-progress

        call build/windows/package.bat "%JAVA_HOME%" %JAVAFX_JMODS% $(APP_VERSION)

      condition: eq( variables['Agent.OS'], 'Windows_NT' )
      displayName: 'Build MSI installers'


    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'target/release'
        ArtifactName: 'AudioBookConverter-$(APP_VERSION)'
        publishLocation: 'Container'

